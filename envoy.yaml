static_resources:
  listeners:
    - address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }  # Expose gRPC-Web at 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: grpc_web
                route_config:
                  virtual_hosts:
                    - name: grpc_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: student_service
                            timeout: 0s
                            max_grpc_timeout: 0s
                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                      allow_origin_string_match:
                        - prefix: "*"  # Allow all origins
                      allow_methods: GET, POST, OPTIONS
                      allow_headers: keep-alive, user-agent, cache-control, content-type, x-accept-content-transfer-encoding, x-accept-response-streaming, grpc-timeout
                      expose_headers: grpc-status, grpc-message
                  - name: envoy.filters.http.router

  clusters:
    - name: student_service
      type: LOGICAL_DNS
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}  # Enable gRPC
      load_assignment:
        cluster_name: student_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: 127.0.0.1, port_value: 50055 }
